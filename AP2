_G.Settings = {
    Enabled = true,
    ShowNames = true,
    ShowDistance = true,
    EnableTracer = true,
    TracerColor = Color3.fromRGB(255, 255, 255),
    TracerThickness = 1,
    TracerTransparency = 0.8,
    ToggleKey = Enum.KeyCode.K
}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local ESPObjects = {}

local function createESP(player)
    local billboard = Instance.new("BillboardGui")
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.AlwaysOnTop = true
    billboard.StudsOffset = Vector3.new(0, 50, 0)

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextSize = 10
    textLabel.Text = player.Name
    textLabel.Parent = billboard

    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight"
    highlight.FillTransparency = 1
    highlight.OutlineTransparency = 0
    highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop

    -- Thêm tracer (sử dụng Drawing API)
    local tracer = Drawing.new("Line")
    tracer.Visible = false
    tracer.Color = _G.Settings.TracerColor
    tracer.Thickness = _G.Settings.TracerThickness
    tracer.Transparency = _G.Settings.TracerTransparency

    return billboard, textLabel, highlight, tracer
end

local function removeESP(player)
    local obj = ESPObjects[player]
    if not obj then return end
    if obj.billboard then obj.billboard:Destroy() end
    if obj.highlight then obj.highlight:Destroy() end
    if obj.tracer then obj.tracer:Remove() end
    ESPObjects[player] = nil
end

local function setupESP(player, character)
    if player == LocalPlayer then return end
    removeESP(player)
    local hrp = character:WaitForChild("HumanoidRootPart", 5)
    local humanoid = character:FindFirstChild("Humanoid")
    if not hrp or not humanoid then return end

    local billboard, label, highlight, tracer = createESP(player)
    billboard.Adornee = hrp
    billboard.Parent = LocalPlayer:WaitForChild("PlayerGui")
    highlight.Adornee = character
    highlight.Parent = character

    ESPObjects[player] = {
        billboard = billboard,
        label = label,
        highlight = highlight,
        tracer = tracer,
        hrp = hrp,
        humanoid = humanoid
    }

    humanoid.Died:Connect(function()
        removeESP(player)
    end)
end

local function setESPVisible(state)
    for _, obj in pairs(ESPObjects) do
        if obj.billboard then obj.billboard.Enabled = state end
        if obj.highlight then obj.highlight.Enabled = state end
        if obj.tracer then obj.tracer.Visible = false end
    end
end

local function updateESP()
    if not _G.Settings.Enabled then
        setESPVisible(false)
        return
    end

    local myChar = LocalPlayer.Character
    local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
    if not myHRP then
        setESPVisible(false)
        return
    end

    for player, obj in pairs(ESPObjects) do
        local hrp = obj.hrp
        local humanoid = obj.humanoid
        if humanoid and humanoid.Health > 0 and hrp then
            local dist = (myHRP.Position - hrp.Position).Magnitude
            local inRange = dist <= 3000
            obj.billboard.Enabled = inRange
            obj.highlight.Enabled = inRange

            if inRange then
                local text = ""
                if _G.Settings.ShowNames then text = player.Name end
                if _G.Settings.ShowDistance then
                    text = text .. (text ~= "" and " [" or "[") .. math.floor(dist) .. " studs]"
                end
                obj.label.Text = text

                -- Tracer logic
                if _G.Settings.EnableTracer then
                    local rootPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                    local screenBottom = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                    if onScreen then
                        obj.tracer.From = screenBottom
                        obj.tracer.To = Vector2.new(rootPos.X, rootPos.Y)
                        obj.tracer.Visible = true
                    else
                        obj.tracer.Visible = false
                    end
                else
                    obj.tracer.Visible = false
                end
            else
                obj.tracer.Visible = false
            end
        else
            removeESP(player)
        end
    end
end

for _, player in ipairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        player.CharacterAdded:Connect(function(char)
            setupESP(player, char)
        end)
        if player.Character then
            setupESP(player, player.Character)
        end
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        player.CharacterAdded:Connect(function(char)
            setupESP(player, char)
        end)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    removeESP(player)
end)

RunService.RenderStepped:Connect(updateESP)

UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == _G.Settings.ToggleKey then
        _G.Settings.Enabled = not _G.Settings.Enabled
        setESPVisible(_G.Settings.Enabled)
    end
end)
