--[[
Open source
Made by !vcsk0#1516
Credits to me
Credits to the Owner Who Made The ESP Script
]]

local CoreGui = game:GetService("StarterGui")
local Players = game:GetService("Players")

local function isNumber(str)
    if tonumber(str) ~= nil or str == 'inf' then
        return true
    end
end

getgenv().HitboxSize = 15
getgenv().HitboxTransparency = 0.9
getgenv().HitboxStatus = false
getgenv().TeamCheck = false
getgenv().Walkspeed = Players.LocalPlayer.Character.Humanoid.WalkSpeed
getgenv().Jumppower = Players.LocalPlayer.Character.Humanoid.JumpPower
getgenv().TPSpeed = 3
getgenv().TPWalk = false

-- Hàm Hitbox Expander với Hook
local function HitboxExpander(status, teamCheck, size, transparency)
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")

    -- Hook __index để spoof properties
    local mt = getrawmetatable(game)
    local old_index = mt.__index
    setreadonly(mt, false)
    mt.__index = newcclosure(function(self, key)
        if self:IsA("BasePart") and self.Name == "Head" then
            if key == "Size" then
                return Vector3.new(1, 1, 1)
            elseif key == "Transparency" then
                return 1
            elseif key == "CanCollide" then
                return true
            elseif key == "Anchored" then
                return false
            end
        end
        return old_index(self, key)
    end)

    -- Hook __namecall để chặn Kick/FireServer
    local old_namecall = mt.__namecall
    mt.__namecall = newcclosure(function(self, ...)
        local method = getnamecallmethod()
        local args = {...}
        if method == "Kick" or (method == "FireServer" and (tostring(self):find("AntiCheat") or tostring(self):find("Report"))) then
            return
        end
        return old_namecall(self, ...)
    end)
    setreadonly(mt, true)

    -- Logic hitbox
    if status then
        for _, v in pairs(Players:GetPlayers()) do
            if v.Name ~= Players.LocalPlayer.Name then
                pcall(function()
                    if not teamCheck or (teamCheck and Players.LocalPlayer.Team ~= v.Team) then
                        v.Character.Head.Size = Vector3.new(size, size, size)
                        v.Character.Head.Transparency = transparency
                        v.Character.Head.BrickColor = BrickColor.new("Really black")
                        v.Character.Head.Material = "Neon"
                        v.Character.Head.CanCollide = false
                        v.Character.Head.Anchored = true
                        v.Character.Head.CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1.5, 0)
                    end
                end)
            end
        end
    else
        for _, v in pairs(Players:GetPlayers()) do
            if v.Name ~= Players.LocalPlayer.Name then
                pcall(function()
                    v.Character.Head.Size = Vector3.new(1, 1, 1)
                    v.Character.Head.Transparency = 1
                    v.Character.Head.BrickColor = BrickColor.new("Medium stone grey")
                    v.Character.Head.Material = "Plastic"
                    v.Character.Head.CanCollide = true
                    v.Character.Head.Anchored = false
                end)
            end
        end
    end
end

--// UI
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/UI-Library/main/Source/MyUILib(Unamed).lua"))()
local Window = Library:Create("Hitbox Expander")

local ToggleGui = Instance.new("ScreenGui")
local Toggle = Instance.new("TextButton")

ToggleGui.Name = "ToggleGui_HE"
ToggleGui.Parent = game.CoreGui

Toggle.Name = "Toggle"
Toggle.Parent = ToggleGui
Toggle.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
Toggle.BackgroundTransparency = 0.660
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0.0650164187, 0, 0.0888099447, 0)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "Toggle"
Toggle.TextScaled = true
Toggle.TextColor3 = Color3.fromRGB(40, 40, 40)
Toggle.TextSize = 24.000
Toggle.TextXAlignment = Enum.TextXAlignment.Left
Toggle.Active = true
Toggle.Draggable = true
Toggle.MouseButton1Click:connect(function()
    Library:ToggleUI()
end)

local HomeTab = Window:Tab("Home", "rbxassetid://10888331510")
local PlayerTab = Window:Tab("Players", "rbxassetid://12296135476")
local VisualTab = Window:Tab("Visuals", "rbxassetid://12308581351")

HomeTab:InfoLabel("only works on some games!")

HomeTab:Section("Settings")

HomeTab:TextBox("Hitbox Size", function(value)
    getgenv().HitboxSize = value
end)

HomeTab:TextBox("Hitbox Transparency", function(number)
    getgenv().HitboxTransparency = number
end)

HomeTab:Section("Main")

HomeTab:Toggle("Status: ", function(state)
    getgenv().HitboxStatus = state
    game:GetService('RunService').RenderStepped:connect(function()
        HitboxExpander(HitboxStatus, TeamCheck, HitboxSize, HitboxTransparency)
    end)
end)

HomeTab:Toggle("Team Check", function(state)
    getgenv().TeamCheck = state
end)

HomeTab:Keybind("Toggle UI", Enum.KeyCode.F, function()
    Library:ToggleUI()
end)

PlayerTab:TextBox("WalkSpeed", function(value)
    getgenv().Walkspeed = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
    end)
end)

PlayerTab:Toggle("Loop WalkSpeed", function(state)
    getgenv().loopW = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopW == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
            end)
        end
    end)
end)

PlayerTab:TextBox("JumpPower", function(value)
    getgenv().Jumppower = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = value
    end)
end)

PlayerTab:Toggle("Loop JumpPower", function(state)
    getgenv().loopJ = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopJ == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Jumppower
            end)
        end
    end)
end)

PlayerTab:TextBox("TP Speed", function(value)
    getgenv().TPSpeed = value
end)

PlayerTab:Toggle("TP Walk", function(s)
    getgenv().TPWalk = s
    local hb = game:GetService("RunService").Heartbeat
    local player = game:GetService("Players")
    local lplr = player.LocalPlayer
    local chr = lplr.Character
    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
    while getgenv().TPWalk and hb:Wait() and chr and hum and hum.Parent do
        if hum.MoveDirection.Magnitude > 0 then
            if getgenv().TPSpeed and isNumber(getgenv().TPSpeed) then
                chr:TranslateBy(hum.MoveDirection * tonumber(getgenv().TPSpeed))
            else
                chr:TranslateBy(hum.MoveDirection)
            end
        end
    end
end)

PlayerTab:Slider("Fov", game.Workspace.CurrentCamera.FieldOfView, 120, function(v)
    game.Workspace.CurrentCamera.FieldOfView = v
end)

PlayerTab:Toggle("Noclip", function(s)
    getgenv().Noclip = s
    game:GetService("RunService").Heartbeat:Connect(function()
        if Noclip == true then
            game:GetService("RunService").Stepped:wait()
            game.Players.LocalPlayer.Character.Head.CanCollide = false
            game.Players.LocalPlayer.Character.Torso.CanCollide = false
        end
    end)
end)

PlayerTab:Toggle("Infinite Jump", function(s)
    getgenv().InfJ = s
    game:GetService("UserInputService").JumpRequest:connect(function()
        if InfJ == true then
            game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
        end
    end)
end)

PlayerTab:Button("Rejoin", function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end)

VisualTab:InfoLabel("Wait 3-10 seconds")

VisualTab:Toggle("Character Highlight", function(state)
    getgenv().enabled = state
    getgenv().filluseteamcolor = true
    getgenv().outlineuseteamcolor = true
    getgenv().fillcolor = Color3.new(0, 0, 0)
    getgenv().outlinecolor = Color3.new(1, 1, 1)
    getgenv().filltrans = 0.5
    getgenv().outlinetrans = 0.5
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/Highlight-ESP.lua"))()
end)

if game.PlaceId == 3082002798 then
    local GamesTab = Window:Tab("Games", "rbxassetid://15426471035")
    GamesTab:InfoLabel("Game: " .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
    GamesTab:Button("No Cooldown", function()
        for i, v in pairs(game:GetService('ReplicatedStorage')['Shared_Modules'].Tools:GetDescendants()) do
            if v:IsA('ModuleScript') then
                local Module = require(v)
                Module.DEBOUNCE = 0
            end
        end
    end)
end
